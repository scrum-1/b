var tipuesearch = {"pages": [{'title': 'About', 'text': '動態網站:  https://b.scrum1.repl.co  主要用來維護網站內容 \n 靜態網站:  https://scrum-1.github.io/b  主要用來展示網站內容 \n 對應倉儲:  https://github.com/scrum-1/b  主要用來儲存網站資料 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Process', 'text': '經由  https://b.scrum1.repl.co  維護網站內容 \n 在 Replit Git tool 進行提交後, 回到 Replit shell 執行 git push github \n', 'tags': '', 'url': 'Process.html'}, {'title': 'Replit', 'text': 'https://replit.com/  (use wcms) \n Replit 是一個能夠執行 Python 讓 cmsimde 網站的動態系統得以啟動, 並與 Github 中的倉儲保持同步的雲端服務. \n 要讓 cmsimde 網站在 Replit 中執行, 必須設定 main.py: \n from cmsimde import flaskapp\nflaskapp.app.run(host=\'0.0.0.0\', port=8080) \n 利用 scrum1 At mde Gmail 登入 Replit, 建立名稱為 c 的 Repls, 則所建立的動態網站將位於:  https://c.scrum1.repl.co \n \n 以下為實際在 Replit 建立動態網站的流程: \n 登入 Replit \n 建立新的 Repls 時選擇採用 Python template 作為 Language, Repls title 選擇用 "b" \n 為了要讓 Replit scrum1 帳號下的 b Repls 與 Github scrum-1 帳號下的 b 倉儲內容同步, 因此同時建立空倉儲 b \n 接著在 b Repls 中進入 shell, 執行 git init, 起始 git 倉儲的架構, 但因內建選用 master 作為分支名稱, 因此接著執行 git branch -m main \n 接著建立 .gitignore 內容如下: \n # Byte-compiled\n__pycache__/\n# for Replit, do not use the embedded venv Python\nvenv/\nconfig/config\n.DS_Store\n*.lock\n*.nix \n 接著將 cmsimde 設為倉儲子模組: \n git submodule add  https://github.com/mdecycu/cmsimde.git  cmsimde \n 待 cmsimde 子模組取下倉儲檔案後, 將 up_dir 中的所有檔案複製到 b 倉儲的根目錄 \n cp -R ./cmsimde/up_dir/* ./ \n 表示利用 cp 指令, -R 表示要連目錄中的所有檔案與目錄一併複製 \n 接著從 Replit 的 Tools 帶出 Git 工具準備提交 (請注意 Replit 並不支援 git add .) \n 接著將遠端的倉儲設為 remote, 名稱為 github \n git remote add github  https://github.com/scrum-1/b.git \n 接著將 scrum-1 具帶 repo 管理權限的 token 放入代號為 "github" 的 url 中, 然後執行 git push github \n 接著利用 Replit 中的 shell 安裝啟動 cmsimde 動態網站所需的模組: \n pip install flask flask_cors bs4 lxml pelican markdown gevent \n 接著執行 main.py 啟用動態網站,  https://b.scrum1.repl.co  就可以登入修改管理者密碼並著手維護倉儲內容 \n 最後在  https://github.com/scrum-1/b.git  端設定 Github Pages, 並在 Replit 端改版後, 以 Git 工具將內容推向 Github \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Notice', 'text': '在 Replit 中編輯檔案無需 save, 只要完成 key 資料即時儲存 \n Replit 中的 git init 仍然使用 master 作為主分支名稱, 可以利用 git branch -m main 將 master 修改為 main \n Replit 給定的免費資料很少, 若其中的動態網站無法啟動, 可以使用近端 (localhost) 或中端 (自建 server) 維護 Github 上的同步靜態網站', 'tags': '', 'url': 'Notice.html'}]};